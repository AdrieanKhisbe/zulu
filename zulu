#!/usr/bin/env zsh

###
# Print usage information
###
function _zulu_usage() {
  echo $(color yellow "Usage:")
  echo "  zulu [options] <command>"
  echo
  echo $(color yellow "Options:")
  echo "  -h, --help          Output this help text and exit"
  echo
  echo $(color yellow "Commands:")
  echo "  install <package>     Install a package"
  echo "  uninstall <package>   Uninstall a package"
  echo "  upgrade <package>     Upgrade a package"
  echo "  link <package>        Create symlinks for a package"
  echo "  unlink <package>      Remove symlinks for a package"
  echo "  list                  List packages"
  echo "  info                  Show information for a package"
  echo "  search                Search the package index"
  echo "  alias <args>          Functions for adding/removing aliases"
  echo "  path <args>           Functions for adding/removing dirs from \$PATH"
  echo "  fpath <args>          Functions for adding/removing dirs from \$fpath"
  echo "  cdpath <args>         Functions for adding/removing dirs from \$cdpath"
  echo "  update                Update the package index"
  echo "  self-update           Update zulu"
}

function _zulu_version() {
  cat "$base/core/.version"
}

###
# The main zulu command. Loads and executes all other commands
###
(( $+functions[zulu] )) || function zulu() {
  local cmd base help version

  # Set up some source paths
  base=${ZULU_DIR:-"${ZDOTDIR:-$HOME}/.zulu"}
  config=${ZULU_CONFIG_DIR:-"${ZDOTDIR:-$HOME}/.config/zulu"}

  # Zulu uses color (https://github.com/molovo/color) when installed
  # Here's a simple fallback if it's not
  type color > /dev/null || function color() {
    echo "${(@)@:2}"
  }

  # Parse CLI options
  zparseopts -D h=help -help=help v=version -version=version

  # Print help
  if [[ $help ]]; then
    _zulu_usage
    return
  fi

  if [[ $version ]]; then
    _zulu_version
    return
  fi

  cmd="$1"

  # The init command needs to be loaded itself
  if [[ $cmd = 'init' ]]; then
    if (( ! $+functions[_zulu_init] )); then
      source "$base/core/zulu-init"
    fi
  fi

  #Â Check if the requested command exists
  if (( ! $+functions[_zulu_${cmd}] )); then
    # If it doesn't, print usage information and exit
    echo $(color red "Command '$cmd' can not be found.")
    echo
    _zulu_usage
    return 1
  fi

  # Execute the requested command
  _zulu_${cmd} "${(@)@:2}"
}
